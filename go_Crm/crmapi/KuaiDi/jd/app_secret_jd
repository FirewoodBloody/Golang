package jd

import (
	"crypto/md5"
	"fmt"
	"io/ioutil"
	"net/http"
	url2 "net/url"
	"strings"
	"time"
)

//计算签名
//顺序如下
//appSecret，access_token,app_key,method,param_json,timestamp,v，appSecret
func generateSign(appKey, accessToken, appSecret, method, timestamp, version, paramJson string) string {
	str := strings.Join([]string{appSecret, "access_token", accessToken, "app_key", appKey,
		"method", method, "param_json", paramJson, "timestamp", timestamp, "v", version, appSecret}, "")
	return fmt.Sprintf("%02X", md5.Sum([]byte(str)))
}

func sendRequest(baseUrl, method, domain, appKey, appSecret, accessToken, version, requestBody string) (string, error) {
	timestamp := time.Now().Format("2006-01-02 15:04:05")
	sign := generateSign(appKey, accessToken, appSecret, method, timestamp, version, requestBody)
	url := fmt.Sprintf("%s/%s?access_token=%s&app_key=%s&method=%s&timestamp=%s&v=%s&sign=%s&LOP-DN=%s",
		baseUrl, method, accessToken, appKey,
		url2.QueryEscape(method), url2.QueryEscape(timestamp),
		version, sign, domain)

	resp, err := http.Post(url, "application/json", strings.NewReader(requestBody))
	if err != nil {
		return "", err
	}
	defer resp.Body.Close()

	body, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		return "", err
	}
	return string(body), nil
}

func SendRequestS(baseUrl, method, body, domain string) (string, error) {
	//baseUrl := "https://uat-api.jdl.cn"
	//domain := "express"
	appKey := "02e6a77198d44d798485913cf2677cf9"
	appSecret := "395b099592a74233804635645c61a96f"
	accessToken := "91ffbe7779464526918520f0718b7dd7"
	//refreshToken:=	"e53d8786b4124497b7deaa38563acbe7"
	//customerCode := "029K708772"
	//method := "/WlyTestService/queryOrder"
	version := "2.0"
	//body := "[\"JDX4253940235237\"]"
	return sendRequest(baseUrl, method, domain, appKey, appSecret, accessToken, version, body)
}
